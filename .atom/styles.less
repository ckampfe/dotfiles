/*
 * Your Stylesheet
 *
 * This stylesheet is loaded when Atom starts up and is reloaded automatically
 * when it is changed and saved.
 *
 * Add your own CSS or Less to fully customize Atom.
 * If you are unfamiliar with Less, you can read more about it here:
 * http://lesscss.org
 */


@duo-blue: rgb(95,109,235);
@brand-pink: rgb(255, 149, 166);
@bg-gray: rgb(251, 250, 249);
@tab-light-brown: #a59483;
@tab-light-brown-active: #786655;

atom-text-editor {
  font: 'FiraCode-Retina'
}

atom-text-editor .line.cursor-line, :host .line.cursor-line {
  background-color: rgba(208, 206, 204, 0.25);
}

atom-text-editor::shadow .selection .region {
  background-color: rgba(230, 230, 230, 0.30);
}

li.file.entry.list-item.status-modified {
  color: @brand-pink;
}

li.list-nested-item.selected.status-modified > .list-item {
  color: @brand-pink;
}

.list-tree li.list-nested-item.selected.status-modified > .list-item {
  color: @brand-pink;
}

directory entry list-nested-item status-modified selected expanded {
  color: @brand-pink;
}

.list-tree li.list-nested-item.status-modified > .list-item {
  color: @brand-pink;
}

li.file.entry.list-item.status-added {
  color: @duo-blue;
}

div.header.list-item {
  color: @duo-blue;
}

.list-tree li.list-nested-item.status-added > .list-item {
  color: @duo-blue;
}

atom-text-editor.vim-mode-plus.normal-mode,
atom-text-editor.vim-mode-plus.operator-pending-mode,
atom-text-editor.vim-mode-plus.visual-mode
{
  &, &.is-focused {
    &::shadow, &
    {
      .cursor {
        // cursor styles
        background-color: @brand-pink;
      }
      .blink-off .cursor {
        background-color: @brand-pink;
        // cursor style while blinking (if you so desire)
      }
    }
  }
}

atom-text-editor::shadow .is-focused .cursors .cursor {
  opacity: 1;
}



atom-text-editor[mini].is-focused {
  border-color: @brand-pink;
  box-shadow: @brand-pink;
  background-color: #ffffff;
}

atom-text-editor[mini] .cursor {
  border-color: @brand-pink;
}

.tooltip.bottom .tooltip-arrow {
  border-bottom-color: @brand-pink;
}

.tooltip .tooltip-inner {
  background-color: rgba(223, 217, 211, 0.9);
  // background-color: @bg-gray;
  color: rgb(77, 66, 56);
}

atom-workspace {
  background-color: @bg-gray;
}

.btn-group > .btn.selected, .btn-group > .btn.selected:first-child, .btn-group > .btn.selected:last-child {
  background-color: @brand-pink;
}

.div .cursors .cursor {
  background-color: @bg-gray;
}

.settings-view .setting-description {
  color: #9c9c9c;
}

.settings-view .install-button {
  background-color: @brand-pink;
  background-image: linear-gradient(@brand-pink, @brand-pink);
}

.settings-view .install-button:focus, .settings-view .install-button:hover {
  background-image: linear-gradient(@brand-pink, @brand-pink);
}

.tab-bar {
  background-color: @bg-gray;
}

.tab-bar .tab .title {
  background-color: @bg-gray;
}

.tab-bar .tab::before {
  background-color: #c8c8c8;
  width: 0;
}

.tree-view {
  background-color: @bg-gray;
}

.tab-bar .tab.modified:not(:hover) .close-icon {
  color: @brand-pink;
}

.tab-bar .tab .close-icon:hover {
  color: white;
  background-color: @tab-light-brown;
}

.tab-bar .tab.active[data-type$="Editor"] {
  color: @tab-light-brown-active;
}

.tab-bar .tab .close-icon {
  color: @tab-light-brown;
}

.tab-bar .tab.modified:hover .close-icon {
  color: @tab-light-brown;
}

.title-bar {
  border-bottom: none;
  background-color: @bg-gray;
}

.settings-view input[type="checkbox"]:active, .settings-view input[type="checkbox"]:checked {
  background-color: @brand-pink;
}
